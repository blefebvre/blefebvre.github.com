<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bruce Lefebvre]]></title>
  <link href="http://brucelefebvre.com/atom.xml" rel="self"/>
  <link href="http://brucelefebvre.com/"/>
  <updated>2014-05-30T00:18:11-04:00</updated>
  <id>http://brucelefebvre.com/</id>
  <author>
    <name><![CDATA[Bruce Lefebvre]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mobile Apps: Made and managed in AEM]]></title>
    <link href="http://brucelefebvre.com/blog/2014/05/30/mobile-apps-made-and-managed-in-aem/"/>
    <updated>2014-05-30T00:07:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2014/05/30/mobile-apps-made-and-managed-in-aem</id>
    <content type="html"><![CDATA[<p>I&#8217;m thrilled to be returning to Basel this summer to present at the conference formerly known as CQCON: <a href="http://www.connectcon.ch/2014/en.html">CONNECT Web Experience</a>. This year I&#8217;ll be speaking about building and managing mobile applications within AEM, with a focus on the technical details of the solution.</p>

<p>To frame the context of the integration between AEM and PhoneGap, I told a story of a hypothetical company looking to extend the reach of their content by <a href="http://brucelefebvre.com/blog/2014/03/14/so-you-want-to-build-an-app/">building a mobile app</a>. Since presenting at both <a href="http://tv.adobe.com/watch/adobe-summit-2014/technical-session-mobile-app-development-and-content-management-with-aem/">Adobe SUMMIT</a> and <a href="http://brucelefebvre.com/blog/2014/04/10/aemhub-mobile-apps-in-aem/">AEMHub</a>, I&#8217;ve had a chance to work with some real, non-hypothetical customers, and have selected a few themes from these experiences to highlight for an audience of highly-technical AEM pros.</p>

<!-- more -->


<p>Build it yourself, or leverage an existing library? Lean on jQuery/Zepto/xui, or forge on alone? AngularJS, Ember or Backbone? Bacon, ham or sausage? Today&#8217;s web developer has options aplenty when it comes to building product - too many even, you might argue. As developers of mobile apps we must choose carefully to ensure we&#8217;re simplifying our code base while not restricting our options as the platform evolves. We need to be conscious that all the processing power and memory available to our app will fit into our user&#8217;s pocket (&#8216;Note&#8217; users excluded). We must recognize that expectations of a mobile app are very different from that of the web, especially with regards to offline availability of content. As such, the decision of which 3rd party libraries to depend and build upon must be deeper than simply picking the flavour of the week. I&#8217;ll dig into the libraries we&#8217;ve had success working with and describe the long (and somewhat bumpy) road that led us to them.</p>

<p>Whether dealing with products in a commerce scenario or physical properties in hospitality, app content often involves a set of items that should be rendered in a similar fashion. This type of data lends itself nicely to a template based approach, one that is well supported by AngularJS. I&#8217;ll present one approach to structuring your data for consumption by AngularJS that results in a scalable - and maintainable - AEM app.</p>

<p>PhoneGap&#8217;s Javascript to native bridge is a key piece of the framework, one that serves to distinguish your app from a traditional mobile website by exposing access to platform APIs through it&#8217;s pluggable architecture. Some of the functionality supported by featured Cordova plugins include capturing images via the device camera(s), access to the contact database, file system access, and <a href="http://plugins.cordova.io/#/">many more</a>. I&#8217;ll present the patterns we followed to expose this bridge to our app&#8217;s components, and share code samples that&#8217;ll have you up and running with your own project in no time.</p>

<p>See you there.</p>

<p><a href="http://www.connectcon.ch/2014/en.html">CONNECT Web Experience</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AEMHub 2014: Mobile Apps in AEM]]></title>
    <link href="http://brucelefebvre.com/blog/2014/04/10/aemhub-mobile-apps-in-aem/"/>
    <updated>2014-04-10T11:32:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2014/04/10/aemhub-mobile-apps-in-aem</id>
    <content type="html"><![CDATA[<p>My slides from AEMHub are available here: <a href="http://brucelefebvre.com/assets/mobile-apps-m-and-m-in-aem/">Mobile apps: Made and managed in AEM</a></p>

<p>The code from my demo is available on github: <a href="http://bit.ly/aem-pg">github.com/blefebvre/aem-phonegap-kitchen-sink</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So, you want to build an app]]></title>
    <link href="http://brucelefebvre.com/blog/2014/03/14/so-you-want-to-build-an-app/"/>
    <updated>2014-03-14T14:03:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2014/03/14/so-you-want-to-build-an-app</id>
    <content type="html"><![CDATA[<p>You&#8217;ve been approached by management and given orders to begin architecting a plan to get that ever-coveted place in the app store. Your peers at the office are devoted iOS fans - aside from that one guy, still touting the battery life of his flip phone - and expect to see your work in their preferred store, and soon. However, upon reviewing mobile browser analytics from your company&#8217;s site, you notice a trend: not all traffic is from mobile Safari. Hits seem to be originating from Android browsers at about half the rate of Safari, and Google&#8217;s Chrome browser is not far behind. Your office may be satisfied with an iPhone app, but how will your Android customers take it?</p>

<!-- more -->


<p>Being a primarily web-oriented shop your developers are well versed in the finer points of building a progressively enhanced, responsive site that renders fast and legibly on devices of varying form factors, taking advantage of features present on the latest models while not leaving anyone behind (right?). They don&#8217;t have Objective-C experience, and their server side Java skills will only get them so far in Android or BlackBerry native development. There&#8217;s always the option of outsourcing, but it comes with a price tag - one that does not soon disappear if you plan on keeping your app healthy and relevant on the latest hardware.</p>

<p>Enter PhoneGap. A <a href="http://phonegap.com/2012/03/19/phonegap-cordova-and-what%E2%80%99s-in-a-name/">distribution of Apache Cordova</a>, PhoneGap is a project which describes itself as enabling cross-platform app development with web technologies you know and love. It sounds promising! You read on. Turns out PhoneGap is basically a web browser, augmented with a JavaScript bridge that provides direct access to device features including the file system, camera, accelerometer, geolocation, compass, contacts, <a href="http://docs.phonegap.com/en/3.4.0/cordova_plugins_pluginapis.md.html#Plugin%20APIs">and more</a>. The plugin architecture is extensible, meaning any device feature that is not currently available can be implemented and added to your app, and even shared with the world if you feel so inclined. It has been around for about 5 years and <a href="http://phonegap.com/app/feature/">many successful apps</a> have been produced with it.</p>

<p>As it stands, PhoneGap supports all the device operating systems &amp; versions that your team plans to target. Now, if only there was a way to repurpose your brand&#8217;s most valuable asset: its content. Using Adobe&#8217;s <a href="http://www.adobe.com/ca/solutions/web-experience-management.html">Experience Manager</a> (formerly CQ), your team has worked tirelessly to ensure the workflows and business logic are in place to support a distributed team of content authors, marketing personnel, and IT users alike. Your authors have built a solid foundation in the solution, and have embraced the agility afforded by being able to contribute on their various devices via the touch-friendly user interface. If only there was a way&#8230;</p>

<p>Well, there is. This spring I&#8217;m thrilled to be sharing the details of the AEM 6.0 and PhoneGap integration at both <a href="https://adobesummit.activeevents.com/2014/slc/connect/sessionDetail.ww?SESSION_ID=1211">Adobe SUMMIT</a> in Salt Lake City, and <a href="http://aemhub.cognifide.com/speakers.html#Bruce-Lefebvre">AEM Hub</a> - a brand new conference taking place in London. I hope you will join me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CQ Gems: Mobile First Development]]></title>
    <link href="http://brucelefebvre.com/blog/2013/09/18/cq-gems-mobile-first-development/"/>
    <updated>2013-09-18T15:11:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2013/09/18/cq-gems-mobile-first-development</id>
    <content type="html"><![CDATA[<p>I presented a talk on <a href="http://dev.day.com/content/ddc/en/gems/mobile-first-development-with-cq-made-easy0.html">Mobile First Development with CQ Made Easy</a> as part of the <a href="http://dev.day.com/gems">CQ Gems</a> technical series. My slides from CQCON were updated to include a more complete list of resources.</p>

<p>Bonus: the source code of &#8220;CQCON Village&#8221; - the site I made responsive during the demo - is available on github including all the steps I went through to transform it.</p>

<!-- more -->


<p>Slides: <a href="http://brucelefebvre.com/assets/cqcon-mobile-first/">CQCON mobile first</a> (resources start at <a href="http://brucelefebvre.com/assets/cqcon-mobile-first/#/42">slide 42</a>)</p>

<p>Demo source code: <a href="https://github.com/blefebvre/cqcon-rwd-demo">CQCON Village RWD Overhaul</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Evolve 2013: CQ Mobile Apps]]></title>
    <link href="http://brucelefebvre.com/blog/2013/08/28/evolve-2013-cq-mobile-apps/"/>
    <updated>2013-08-28T16:28:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2013/08/28/evolve-2013-cq-mobile-apps</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/savs">Andrew Savory</a> and I talked about building mobile applications with CQ at <a href="http://www.evolve13.com/">Evolve13</a>. Our slides are available here: <a href="http://brucelefebvre.com/assets/evolve13-cq-mobile-apps/">evolve13-cq-mobile-apps</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Dispatcher on OS X]]></title>
    <link href="http://brucelefebvre.com/blog/2013/08/22/setting-up-a-dispatcher-on-os-x/"/>
    <updated>2013-08-22T22:40:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2013/08/22/setting-up-a-dispatcher-on-os-x</id>
    <content type="html"><![CDATA[<p>The dispatcher is an important piece of a secure, stable, and solidly-performing AEM implementation. According to <a href="http://dev.day.com/docs/en/cq/current/deploying/dispatcher.html">the documentation</a> it can provide caching, load balancing, as well as help to protect your publish instances from attack. For such a multifaceted tool it seems to receive very little attention during the dev process, typically called to action in the final stages of a deployment when most of the dev work has already been done. I propose that developers (including myself) could write better code if they had a deeper understanding of this tool, which is why I went through the process of setting one up on my Mac. What follows are my notes.</p>

<p>Here&#8217;s what you&#8217;ll need to get started:</p>

<!-- more -->


<ul>
<li>OS X machine with Apache installed and enabled</li>
<li>AEM 5.6.1 quickstart

<ul>
<li>author on :4502</li>
<li>publish on :4503</li>
</ul>
</li>
</ul>


<p>Figure out which version of Apache httpd you&#8217;re working with:</p>

<pre><code>$ httpd -v
</code></pre>

<p>Download and extract the correct dispatcher version for your httpd:</p>

<p><a href="https://www.adobeaemcloud.com/content/companies/public/adobe/dispatcher/dispatcher.html">https://www.adobeaemcloud.com/content/companies/public/adobe/dispatcher/dispatcher.html</a></p>

<p>Inside the extracted directory you will find a file named &#8216;dispatcher-apache&lt;version&gt;.so&#8217;. Copy this file to /usr/libexec/apache2. In my case:</p>

<pre><code>$ sudo cp dispatcher-apache2.2-4.1.4.so /usr/libexec/apache2
</code></pre>

<p>Head to the apache2 modules directory:</p>

<pre><code>$ cd /usr/libexec/apache2/
</code></pre>

<p> Create a symlink to the dispatcher module you just copied over:</p>

<pre><code>$ sudo ln -s dispatcher-apache2.2-4.1.4.so mod_dispatcher.so
</code></pre>

<p>Head to /etc/apache2 to configure it:</p>

<pre><code>$ cd /etc/apache2
</code></pre>

<p>Open httpd.conf (as root) with your editor of choice and add the following line to the end of the LoadModule section (line 119 in my case):</p>

<pre><code>LoadModule dispatcher_module libexec/apache2/mod_dispatcher.so
</code></pre>

<p>After this line, add the following configuration:</p>

<pre><code># configure the minimal setting for the dispatcher
# the main configuration is read from the 'DispatcherConfig' file.
&lt;IfModule disp_apache2.c&gt;
    # location of the configuration file. eg: 'conf/dispatcher.any'
    DispatcherConfig /etc/apache2/conf/dispatcher.any

    # location of the dispatcher log file. eg: 'logs/dispatcher.log'
    DispatcherLog    /var/log/apache2/dispatcher.log

    # log level for the dispatcher log
    # 0 Errors
    # 1 Warnings
    # 2 Infos
    # 3 Debug
    DispatcherLogLevel 3

    # if turned to 1, the dispatcher looks like a normal module
    # since build 5210, this setting has no effect, since it used to crash
    # apache if set to 0.
    DispatcherNoServerHeader 1

    # if turned to 1, request to / are not handled by the dispatcher
    # use the mod_alias then for the correct mapping
    DispatcherDeclineRoot 0
&lt;/IfModule&gt;

&lt;Directory /&gt;
    &lt;IfModule disp_apache2.c&gt;
        # enable dispatcher for ALL request. if this is too restrictive,
        # move it to another location
        SetHandler dispatcher-handler
    &lt;/IfModule&gt;

    Options FollowSymLinks
    AllowOverride None
&lt;/Directory&gt;
</code></pre>

<p>Create a directory named &#8216;conf&#8217; in /etc/apache2</p>

<pre><code>$ sudo mkdir /etc/apache2/conf
</code></pre>

<p>From the extracted dispatcher directory, copy the provided dispatcher.any to conf:</p>

<pre><code>$ cd ~/Downloads/dispatcher-apache2.2-darwin-x86-64-4.1.4/conf/
$ sudo cp dispatcher.any /etc/apache2/conf/
</code></pre>

<p>Open the copy of dispatcher.any with your editor of choice. Look for the &#8216;/renders&#8217; entry, and point the &#8216;/rend01&#8217; instance host name and port to your publish instance:</p>

<pre><code>/hostname "127.0.0.1"
/port "4503"
</code></pre>

<p>Allow requests with authorized header (uncomment and change value) in dispatcher.any:</p>

<pre><code>/allowAuthorized "1"
</code></pre>

<p>Set the document root directory (search for the existing value):</p>

<pre><code>/docroot "/Library/WebServer/Documents"
</code></pre>

<p>Check your config syntax:</p>

<pre><code>$ sudo apachectl configtest
</code></pre>

<p>The previous command should have outputted &#8216;Syntax OK&#8217;.</p>

<p>Did it not? You may need to correct your configuration. &#8216;apachectl configtest&#8217; should be able to tell you on which line your config is broken.</p>

<p>Give your httpd document root directory to the _www user and group:</p>

<pre><code>$ sudo chown _www:_www /Library/WebServer/Documents/
</code></pre>

<p>Stop Apache httpd:</p>

<pre><code>$ sudo apachectl stop
</code></pre>

<p>In another terminal window (or tab), tail the following log files for errors:</p>

<pre><code>$ tail -f /var/log/apache2/error_log /var/log/apache2/dispatcher.log
</code></pre>

<p>Start Apache httpd back up:</p>

<pre><code>$ sudo apachectl start
</code></pre>

<p>Barring any errors in the logs you should now be able to browse your AEM publish content via the dispatcher:</p>

<p><a href="http://localhost/content/geometrixx-media/en.html">http://localhost/content/geometrixx-media/en.html</a></p>

<p>You can also poke around /Library/WebServer/Documents/ to see how the static content is stored on the file system.</p>

<p>That&#8217;s it! You&#8217;ve just configured your very own dispatcher. I&#8217;ve only scratched the surface here and really glazed over much of the configuration, so make sure to read the following resources before releasing this dispatcher into the wild:</p>

<p>Dispatcher - <a href="http://dev.day.com/docs/en/cq/current/deploying/dispatcher.html">http://dev.day.com/docs/en/cq/current/deploying/dispatcher.html</a></p>

<p>Configuring Dispatcher - <a href="http://dev.day.com/docs/en/cq/current/deploying/dispatcher/disp_config.html">http://dev.day.com/docs/en/cq/current/deploying/dispatcher/disp_config.html</a></p>

<p>Security Checklist - <a href="http://dev.day.com/docs/en/cq/current/deploying/security_checklist.html">http://dev.day.com/docs/en/cq/current/deploying/security_checklist.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CQCON 2013: Mobile First]]></title>
    <link href="http://brucelefebvre.com/blog/2013/06/20/cqcon-2013-mobile-first/"/>
    <updated>2013-06-20T08:10:00-04:00</updated>
    <id>http://brucelefebvre.com/blog/2013/06/20/cqcon-2013-mobile-first</id>
    <content type="html"><![CDATA[<p>My slides from <a href="http://www.cqcon.eu/2013/en.html">CQCON 2013</a> are available here: <a href="http://brucelefebvre.com/assets/cqcon-mobile-first/">cqcon-mobile-first</a></p>
]]></content>
  </entry>
  
</feed>
